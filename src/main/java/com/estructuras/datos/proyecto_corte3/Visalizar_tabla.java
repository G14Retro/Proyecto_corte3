/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.estructuras.datos.proyecto_corte3;

import static com.estructuras.datos.proyecto_corte3.Constants.ARCHIVO;
import com.opencsv.CSVReader;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.List;
import java.io.File;
import java.io.FileReader;
import java.util.ArrayList;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;


/**
 *
 * @author g14_0
 */
public class Visalizar_tabla extends javax.swing.JInternalFrame {
    private CSVReader lectorArchivo = null;
    private DefaultTableModel modeloTabla = new DefaultTableModel();
    private int ancho,alto;
    /**
     * Creates new form Visalizar_tabla
     */
    public Visalizar_tabla() {
        initComponents();
        Toolkit tk = Toolkit.getDefaultToolkit();
        Dimension mainDimension = tk.getScreenSize();
        ancho = (int)mainDimension.getWidth() / 2;
        alto = (int)mainDimension.getHeight() / 2;
        LoadTable();
    }
    
    private void LoadTable(){
        try {
            lectorArchivo = new CSVReader(new FileReader(ARCHIVO));
            String[] fila = null;
            TableColumn column = new TableColumn();
            List<String> listRows = new ArrayList<>();
            while ((fila = lectorArchivo.readNext())!= null) {
                /*for (int i = 0; i < fila.length; i++) {
                    
                }*/
                listRows.add(String.join(",", fila));
            }
            String[] listColumn = listRows.get(0).split(",");
            JTableHeader tableHeader = tableCosts.getTableHeader();
            TableColumnModel tableColumnModel = tableHeader.getColumnModel();
            TableColumn tableColumn;
            modeloTabla = (DefaultTableModel) tableCosts.getModel();
            
            if (tableColumnModel.getColumnCount() != listColumn.length) {
                int diferencia = listColumn.length - tableColumnModel.getColumnCount();
                for (int i = 0; i < diferencia; i++) {
                    tableCosts.addColumn(new TableColumn());
                    modeloTabla.addColumn(new TableColumn());
                }
            }
            for (int i = 0; i < listColumn.length; i++) {
                tableColumn = tableColumnModel.getColumn(i);
                tableColumn.setHeaderValue( listColumn[i]);
                tableHeader.repaint();
            }
            for (int i = 1; i < listRows.size(); i++) {
                String[] dataFila = listRows.get(i).split(",");
                modeloTabla.addRow(dataFila);    
            }
            tableCosts.setSize(ancho, alto);
            lectorArchivo.close();
        } catch (Exception e) {
        }
        
    }
    
    public void LoadHeaderTable(JTable table){
        try {
            lectorArchivo = new CSVReader(new FileReader(ARCHIVO));
            String[] fila = null;
            TableColumn column = new TableColumn();
            List<String> listRows = new ArrayList<>();
            while ((fila = lectorArchivo.readNext())!= null ) {
                listRows.add(String.join(",", fila));
            }
            String[] listColumn = listRows.get(0).split(",");
            JTableHeader tableHeader = table.getTableHeader();
            TableColumnModel tableColumnModel = tableHeader.getColumnModel();
            TableColumn tableColumn;
            modeloTabla = (DefaultTableModel) table.getModel();
            
            if (tableColumnModel.getColumnCount() != listColumn.length) {
                int diferencia = listColumn.length - tableColumnModel.getColumnCount();
                for (int i = 0; i < diferencia; i++) {
                    table.addColumn(new TableColumn());
                    modeloTabla.addColumn(new TableColumn());
                }
            }
            for (int i = 0; i < listColumn.length; i++) {
                tableColumn = tableColumnModel.getColumn(i);
                tableColumn.setHeaderValue( listColumn[i]);
                tableHeader.repaint();
            }
            table.setSize(ancho, alto);
            lectorArchivo.close();
        } catch (Exception e) {
        }
        
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableCosts = new javax.swing.JTable();

        setClosable(true);
        setTitle("Visualizador de datos");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        tableCosts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableCosts);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 854, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableCosts;
    // End of variables declaration//GEN-END:variables
}
